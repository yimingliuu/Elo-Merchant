library(dplyr)
library(reshape2)
library(ggplot2)
library(caret)
library(xgboost)
library(lubridate)

# historical merchant
##################################################################################### 
#####################################################################################
# prep data
dt <- read.csv("Elo/test.csv", stringsAsFactors = F)
his.tran <- read.csv("Elo/historical_transactions.csv", stringsAsFactors = F)
dt <- inner_join(dt, his.tran, by = "card_id")
rm(his.tran); gc()
m <- read.csv("Elo/merchants.csv", stringsAsFactors = F)
m <- select(m, -c(city_id,category_1,merchant_category_id,category_2,state_id,
                  subsector_id,merchant_group_id))
m <- unique(m)
m[is.na(m)] <- 0
dt <- inner_join(dt, m, by = "merchant_id")
rm(m); gc()

# --------------
# lubridate date
# --------------
dt$first_active_month <- ymd(paste(dt$first_active_month, "-01", sep = ""))
dt$purchase_date <- ymd_hms(dt$purchase_date)

# -----------
# active date 
# -----------
active.date <- dt %>% group_by(card_id) %>% summarise(active_date = unique(first_active_month),
                                                      first_purchase_date = min(purchase_date),
                                                      last_purchase_date = max(purchase_date))
active.date$active_date[is.na(active.date$active_date)] <- active.date$first_purchase_date[is.na(active.date$active_date)]
active.date$days_before_first_use <- with(active.date, as.numeric(abs(difftime(active_date, first_purchase_date, units = "days"))))
active.date$time_span <- with(active.date, as.numeric(abs(difftime(first_purchase_date, last_purchase_date, units = "days"))))
active.date$time_span[active.date$time_span < 1] <- 1

# -------
# feature
# -------
feature <- dt %>% group_by(card_id) %>% summarise(feature_1 = unique(feature_1),
                                                  feature_2 = unique(feature_2),
                                                  feature_3 = unique(feature_3))
feature$feature_3 <- feature$feature_3 + 1

# ---------------
# authorized_flag
# ---------------
authorize <- dt %>% group_by(card_id) %>% summarise(authorized_yes_tot = sum(authorized_flag == "Y"),
                                                    authorized_no_tot = sum(authorized_flag == "N"),
                                                    authorized_rate = mean(authorized_flag == "Y"))

# ----------
# category_1
# ----------
category.1 <- dt %>% group_by(card_id) %>% summarise(category_1_yes_tot = sum(category_1 == "Y"),
                                                     category_1_no_tot = sum(category_1 == "N"),
                                                     category_1_yes_rate = mean(category_1 == "Y"))

# ----------
# category_2 
# ----------
dt$category_2[is.na(dt$category_2)] <- 0
category.2 <- dt %>% group_by(card_id) %>% summarise(category_2_0_tot = sum(category_2 == 0),
                                                     category_2_1_tot = sum(category_2 == 1),
                                                     category_2_2_tot = sum(category_2 == 2),
                                                     category_2_3_tot = sum(category_2 == 3),
                                                     category_2_4_tot = sum(category_2 == 4),
                                                     category_2_5_tot = sum(category_2 == 5),
                                                     category_2_0_ratio = mean(category_2 == 0),
                                                     category_2_1_ratio = mean(category_2 == 1),
                                                     category_2_2_ratio = mean(category_2 == 2),
                                                     category_2_3_ratio = mean(category_2 == 3),
                                                     category_2_4_ratio = mean(category_2 == 4))
# ----------
# category_3
# ----------
dt$category_3 <- with(dt, case_when(category_3 == "A" ~ 1,
                                    category_3 == "B" ~ 2,
                                    category_3 == "C" ~ 3,
                                    TRUE ~ 0))
category.3 <- dt %>% group_by(card_id) %>% summarise(category_3_1_tot = sum(category_3 == 1),
                                                     category_3_2_tot = sum(category_3 == 2),
                                                     category_3_3_tot = sum(category_3 == 3),
                                                     category_3_0_tot = sum(category_3 == 0),
                                                     category_3_1_rate = mean(category_3 == 1),
                                                     category_3_2_rate = mean(category_3 == 2),
                                                     category_3_3_rate = mean(category_3 == 3))
# ----------
# category_4
# ----------
category.4 <- dt %>% group_by(card_id) %>% summarise(category_4_yes_tot = sum(category_4 == "Y"),
                                                     category_4_no_tot = sum(category_4 == "N"),
                                                     category_4_yes_ratio = mean(category_4 == "Y"))

#
category <- left_join(category.1, category.2, by = "card_id")
category <- left_join(category, category.3, by = "card_id")
category <- left_join(category, category.4, by = "card_id")
rm(category.1, category.2, category.3, category.4); gc()

# ---------------
# purchase_amount
# ---------------
dt <- dt %>% mutate(purchase_year = year(purchase_date),
                    purchase_month = month(purchase_date, label = T),
                    purchase_week = wday(purchase_date, label = T),
                    purchase_hour = hour(purchase_date),
                    purchase_morning = as.numeric(purchase_hour > 5 & purchase_hour <= 10),
                    purchase_afternoon = as.numeric(purchase_hour > 10 & purchase_hour <= 20),
                    purchase_night = as.numeric(purchase_hour > 20 & purchase_hour <= 24),
                    purchase_lateNight = as.numeric(purchase_hour >= 0 & purchase_hour <= 5))

spend.approve <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id) %>%
  summarise(spend_app_tot = sum(purchase_amount),
            spend_app_avg = mean(purchase_amount),
            spend_app_min = min(purchase_amount),
            spend_app_max = max(purchase_amount))

spend.reject <- dt %>% filter(authorized_flag == "N") %>% group_by(card_id) %>%
  summarise(spend_rej_tot = sum(purchase_amount),
            spend_rej_avg = mean(purchase_amount),
            spend_rej_min = min(purchase_amount),
            spend_rej_max = max(purchase_amount))

spend <- full_join(spend.approve, spend.reject, by = "card_id")
spend[is.na(spend)] <- 0
rm(spend.approve, spend.reject); gc()

# year
spend.year <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_year) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

tot <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_tot")
names(tot)[!grepl("card_id",names(tot))] <- paste("spend_tot_", names(tot)[!grepl("card_id",names(tot))], sep = "")

avg <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_avg")
names(avg)[!grepl("card_id",names(avg))] <- paste("spend_avg_", names(avg)[!grepl("card_id",names(avg))], sep = "")

min <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_min")
names(min)[!grepl("card_id",names(min))] <- paste("spend_min_", names(min)[!grepl("card_id",names(min))], sep = "")

max <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_max")
names(max)[!grepl("card_id",names(max))] <- paste("spend_max_", names(max)[!grepl("card_id",names(max))], sep = "")

spend.year <- left_join(tot, avg, by = "card_id")
spend.year <- left_join(spend.year, min, by = "card_id")
spend.year <- left_join(spend.year, max, by = "card_id")
spend.year[is.na(spend.year)] <- 0
rm(tot,avg,min,max); gc()

# month
spend.month <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_month) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

spend.month.tot <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_tot")
names(spend.month.tot)[!grepl("card_id",names(spend.month.tot))] <- paste("spend_tot_", names(spend.month.tot)[!grepl("card_id",names(spend.month.tot))], sep = "")

spend.month.avg <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_avg")
names(spend.month.avg)[!grepl("card_id",names(spend.month.avg))] <- paste("spend_avg_", names(spend.month.avg)[!grepl("card_id",names(spend.month.avg))], sep = "")

spend.month.min <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_min")
names(spend.month.min)[!grepl("card_id",names(spend.month.min))] <- paste("spend_min_", names(spend.month.min)[!grepl("card_id",names(spend.month.min))], sep = "")

spend.month.max <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_max")
names(spend.month.max)[!grepl("card_id",names(spend.month.max))] <- paste("spend_max_", names(spend.month.max)[!grepl("card_id",names(spend.month.max))], sep = "")

spend.month <- left_join(spend.month.tot, spend.month.avg, by = "card_id")
spend.month <- left_join(spend.month, spend.month.min, by = "card_id")
spend.month <- left_join(spend.month, spend.month.max, by = "card_id")
spend.month[is.na(spend.month)] <- 0

rm(spend.month.avg, spend.month.max, spend.month.min, spend.month.tot); gc()

# weekday
spend.week <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_week) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

tot <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_tot")
names(tot)[!grepl("card_id",names(tot))] <- paste("spend_tot_", names(tot)[!grepl("card_id",names(tot))], sep = "")

avg <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_avg")
names(avg)[!grepl("card_id",names(avg))] <- paste("spend_avg_", names(avg)[!grepl("card_id",names(avg))], sep = "")

min <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_min")
names(min)[!grepl("card_id",names(min))] <- paste("spend_min_", names(min)[!grepl("card_id",names(min))], sep = "")

max <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_max")
names(max)[!grepl("card_id",names(max))] <- paste("spend_max_", names(max)[!grepl("card_id",names(max))], sep = "")

spend.week <- left_join(tot, avg, by = "card_id")
spend.week <- left_join(spend.week, min, by = "card_id")
spend.week <- left_join(spend.week, max, by = "card_id")
spend.week[is.na(spend.week)] <- 0
rm(tot,avg,min,max); gc()

# daytime
spend.morning <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_morning == 1) %>%
  group_by(card_id) %>% summarise(spend_morning_tot = sum(purchase_amount),
                                  spend_morning_avg = mean(purchase_amount),
                                  spend_morning_min = min(purchase_amount),
                                  spend_morning_max = max(purchase_amount))

spend.afternoon <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_afternoon == 1) %>%
  group_by(card_id) %>% summarise(spend_afternoon_tot = sum(purchase_amount),
                                  spend_afternoon_avg = mean(purchase_amount),
                                  spend_afternoon_min = min(purchase_amount),
                                  spend_afternoon_max = max(purchase_amount))

spend.night <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_night == 1) %>%
  group_by(card_id) %>% summarise(spend_night_tot = sum(purchase_amount),
                                  spend_night_avg = mean(purchase_amount),
                                  spend_night_min = min(purchase_amount),
                                  spend_night_max = max(purchase_amount))

spend.lateNight <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_lateNight == 1) %>%
  group_by(card_id) %>% summarise(spend_lateNight_tot = sum(purchase_amount),
                                  spend_lateNight_avg = mean(purchase_amount),
                                  spend_lateNight_min = min(purchase_amount),
                                  spend_lateNight_max = max(purchase_amount))

spend.dayTime <- left_join(data.frame(card_id = unique(dt$card_id), stringsAsFactors = F),
                           spend.morning,
                           by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.afternoon, by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.night, by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.lateNight, by = "card_id")
spend.dayTime[is.na(spend.dayTime)] <- 0

rm(spend.morning, spend.afternoon, spend.night, spend.lateNight); gc()

# join spend
spend <- left_join(spend, spend.year, by = "card_id")
spend <- left_join(spend, spend.month, by = "card_id")
spend <- left_join(spend, spend.week, by = "card_id")
spend <- left_join(spend, spend.dayTime, by = "card_id")

rm(spend.year, spend.month, spend.week, spend.dayTime); gc()

# -------------
# purchase_date 
# -------------
purchase <- dt %>% group_by(card_id) %>% summarise(purchase_tot_all = n())

purchase.year <- dt %>% group_by(card_id,purchase_year) %>% summarise(n = n())
purchase.year <- dcast(purchase.year, card_id ~ purchase_year, value.var = "n")
purchase.year[is.na(purchase.year)] <- 0
purchase.year <- purchase.year %>% mutate(tot = `2017` + `2018`,
                                          `2017_ratio` = `2017`/tot) %>% select(-tot)
names(purchase.year)[!grepl("card",names(purchase.year))] <- paste("purchase_",
                                                                   names(purchase.year)[!grepl("card",names(purchase.year))],
                                                                   sep = "")
#
purchase.month <- dt %>% group_by(card_id,purchase_month) %>% summarise(n = n())
purchase.month <- dcast(purchase.month, card_id ~ purchase_month, value.var = "n")
purchase.month[is.na(purchase.month)] <- 0
purchase.month <- purchase.month %>% mutate(tot = rowSums(select(purchase.month,-card_id)),
                                            Jan_ratio = Jan/tot,
                                            Feb_ratio = Feb/tot,
                                            Mar_ratio = Mar/tot,
                                            Apr_ratio = Apr/tot,
                                            May_ratio = May/tot,
                                            Jun_ratio = Jun/tot,
                                            Jul_ratio = Jul/tot,
                                            Aug_ratio = Aug/tot,
                                            Sep_ratio = Sep/tot,
                                            Oct_ratio = Oct/tot,
                                            Nov_ratio = Nov/tot) %>% select(-tot)
names(purchase.month)[!grepl("card",names(purchase.month))] <- paste("purchase_", 
                                                                     names(purchase.month)[!grepl("card",names(purchase.month))],
                                                                     sep = "")

#
purchase.week <- dt %>% group_by(card_id,purchase_week) %>% summarise(n = n())
purchase.week <- dcast(purchase.week, card_id ~ purchase_week, value.var = "n")
purchase.week[is.na(purchase.week)] <- 0
purchase.week <- purchase.week %>% mutate(tot = rowSums(select(purchase.week,-card_id)),
                                          Sun_ratio = Sun/tot,
                                          Mon_ratio = Mon/tot,
                                          Tue_ratio = Tue/tot,
                                          Wed_ratio = Wed/tot,
                                          Thu_ratio = Thu/tot,
                                          Fri_ratio = Fri/tot)
names(purchase.week)[!grepl("card",names(purchase.week))] <- paste("purchase_",
                                                                   names(purchase.week)[!grepl("card",names(purchase.week))],
                                                                   sep = "")

#
purchase.morning <- dt %>% group_by(card_id,purchase_morning) %>% summarise(n = n())
purchase.morning <- dcast(purchase.morning, card_id ~ purchase_morning, value.var = "n") %>% select(-`0`)
names(purchase.morning)[!grepl("card",names(purchase.morning))] <- "purchase_morning"

#
purchase.afternoon <- dt %>% group_by(card_id,purchase_afternoon) %>% summarise(n = n())
purchase.afternoon <- dcast(purchase.afternoon, card_id ~ purchase_afternoon, value.var = "n") %>% select(-`0`)
names(purchase.afternoon)[!grepl("card",names(purchase.afternoon))] <- "purchase_afternoon"

#
purchase.night <- dt %>% group_by(card_id,purchase_night) %>% summarise(n = n())
purchase.night <- dcast(purchase.night, card_id ~ purchase_night, value.var = "n") %>% select(-`0`)
names(purchase.night)[!grepl("card",names(purchase.night))] <- "purchase_night"

#
purchase.lateNight <- dt %>% group_by(card_id,purchase_lateNight) %>% summarise(n = n())
purchase.lateNight <- dcast(purchase.lateNight, card_id ~ purchase_lateNight, value.var = "n") %>% select(-`0`)
names(purchase.lateNight)[!grepl("card",names(purchase.lateNight))] <- "purchase_lateNight"

purchase.dayTime <- left_join(data.frame(card_id = unique(dt$card_id), stringsAsFactors = F),
                              purchase.morning,
                              by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.afternoon, by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.night, by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.lateNight, by = "card_id")
purchase.dayTime[is.na(purchase.dayTime)] <- 0

rm(purchase.morning, purchase.afternoon, purchase.night, purchase.lateNight); gc()

purchase <- left_join(purchase, purchase.year, by = "card_id")
purchase <- left_join(purchase, purchase.month, by = "card_id")
purchase <- left_join(purchase, purchase.week, by = "card_id")
purchase <- left_join(purchase, purchase.dayTime, by = "card_id")

rm(purchase.year, purchase.month, purchase.week, purchase.dayTime); gc()

# ------------
# installments
# ------------
dt$installments[dt$installments == -1] <- 0
dt$installments[dt$installments == 999] <- 0
installment <- dt %>% group_by(card_id,installments) %>% summarise(n = n())
installment <- dcast(installment, card_id ~ installments, value.var = "n")
names(installment)[!grepl("card", names(installment))] <- paste("installment_",
                                                                names(installment)[!grepl("card", names(installment))],
                                                                sep = "")
installment[is.na(installment)] <- 0

# ---------
# month_lag
# ---------
month.lag <- dt %>% group_by(card_id) %>% summarise(month_lag_tot = sum(month_lag),
                                                    month_lag_avg = mean(month_lag),
                                                    month_lag_min = min(month_lag),
                                                    month_lag_max = max(month_lag))
# -----------
# merchant_id
# -----------
merchant <- dt %>% group_by(card_id) %>% summarise(merchant_tot = n())
merchant <- left_join(merchant, active.date, by = "card_id") %>% select(-c(first_purchase_date,last_purchase_date,days_before_first_use,active_date))
merchant$merchant_visit_frequency <- with(merchant, merchant_tot/time_span)
merchant$time_span <- NULL

merchant.max <- dt %>% group_by(card_id,merchant_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(merchant_max_visit = max(n), tot = sum(n)) %>%
  mutate(merchant_max_ratio = merchant_max_visit/tot) %>% select(-tot)

merchant.cat.max <- dt %>% group_by(card_id,merchant_category_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(merchant_cat_max_visit = max(n), tot = sum(n)) %>%
  mutate(merchant_cat_max_ratio = merchant_cat_max_visit/tot) %>% select(-tot)

#
merchant <- left_join(merchant, merchant.max, by = "card_id")
merchant <- left_join(merchant, merchant.cat.max, by = "card_id")
rm(merchant.max, merchant.cat.max); gc()

# ------------
# subsector_id
# ------------
subsector.max <- dt %>% group_by(card_id,subsector_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(subsector_max_visit = max(n), tot = sum(n)) %>%
  mutate(subsector_max_ratio = subsector_max_visit/tot) %>% select(-tot)

# -------
# city_id
# -------
city.max <- dt %>% group_by(card_id,city_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(city_max_visit = max(n), tot = sum(n)) %>%
  mutate(city_max_ratio = city_max_visit/tot) %>% select(-tot)

# --------
# state_id
# --------
state.max <- dt %>% group_by(card_id,state_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(state_max_visit = max(n), tot = sum(n)) %>%
  mutate(state_max_ratio = state_max_visit/tot) %>% select(-tot)

# ------------------------
# numerical_1, numerical_2
# ------------------------
num.1 <- dt %>% group_by(card_id) %>% summarise(num_1_tot = sum(numerical_1),
                                                num_1_avg = mean(numerical_1),
                                                num_1_min = min(numerical_1),
                                                num_1_max = max(numerical_1))
num.2 <- dt %>% group_by(card_id) %>% summarise(num_2_tot = sum(numerical_2),
                                                num_2_avg = mean(numerical_2),
                                                num_2_min = min(numerical_2),
                                                num_2_max = max(numerical_2))
numerical <- left_join(num.1, num.2, by = "card_id")
rm(num.1, num.2); gc()

#
mer.num.1 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_num_1_tot = sum(numerical_1),
                                              mer_num_1_avg = mean(numerical_1),
                                              mer_num_1_min = min(numerical_1),
                                              mer_num_1_max = max(numerical_1)) %>% 
  group_by(card_id) %>% summarise(mer_num_1_tot = mer_num_1_tot[which.max(n)],
                                  mer_num_1_avg = mer_num_1_avg[which.max(n)],
                                  mer_num_1_min = mer_num_1_min[which.max(n)],
                                  mer_num_1_max = mer_num_1_max[which.max(n)])
#
mer.num.2 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_num_2_tot = sum(numerical_2),
                                              mer_num_2_avg = mean(numerical_2),
                                              mer_num_2_min = min(numerical_2),
                                              mer_num_2_max = max(numerical_2)) %>% 
  group_by(card_id) %>% summarise(mer_num_2_tot = mer_num_2_tot[which.max(n)],
                                  mer_num_2_avg = mer_num_2_avg[which.max(n)],
                                  mer_num_2_min = mer_num_2_min[which.max(n)],
                                  mer_num_2_max = mer_num_2_max[which.max(n)])
# 
mer.numerical <- left_join(mer.num.1, mer.num.2, by = "card_id")
rm(mer.num.1, mer.num.2); gc()

#
numerical <- left_join(numerical, mer.numerical, by = "card_id")
rm(mer.numerical); gc()

# ------------
# most_recent_
# ------------
sale.range <- dt %>% group_by(card_id) %>% 
  summarise(sale_range_A = sum(most_recent_sales_range == "A"),
            sale_range_B = sum(most_recent_sales_range == "B"),
            sale_range_C = sum(most_recent_sales_range == "C"),
            sale_range_D = sum(most_recent_sales_range == "D"),
            sale_range_E = sum(most_recent_sales_range == "E"),
            sale_range_A_ratio = mean(most_recent_sales_range == "A"),
            sale_range_B_ratio = mean(most_recent_sales_range == "B"),
            sale_range_C_ratio = mean(most_recent_sales_range == "C"),
            sale_range_D_ratio = mean(most_recent_sales_range == "D"))

purchase.range <- dt %>% group_by(card_id) %>% 
  summarise(purchase_range_A = sum(most_recent_purchases_range == "A"),
            purchase_range_B = sum(most_recent_purchases_range == "B"),
            purchase_range_C = sum(most_recent_purchases_range == "C"),
            purchase_range_D = sum(most_recent_purchases_range == "D"),
            purchase_range_E = sum(most_recent_purchases_range == "E"),
            purchase_range_A_ratio = mean(most_recent_purchases_range == "A"),
            purchase_range_B_ratio = mean(most_recent_purchases_range == "B"),
            purchase_range_C_ratio = mean(most_recent_purchases_range == "C"),
            purchase_range_D_ratio = mean(most_recent_purchases_range == "D"))

range <- left_join(sale.range, purchase.range, by = "card_id")
rm(sale.range, purchase.range); gc()

# --------
# sale lag
# --------
sale.lag.3 <- dt %>% group_by(card_id) %>% summarise(sale_lag_3_tot = sum(avg_sales_lag3),
                                                     sale_lag_3_avg = mean(avg_sales_lag3),
                                                     sale_lag_3_min = min(avg_sales_lag3),
                                                     sale_lag_3_max = max(avg_sales_lag3))
sale.lag.6 <- dt %>% group_by(card_id) %>% summarise(sale_lag_6_tot = sum(avg_sales_lag6),
                                                     sale_lag_6_avg = mean(avg_sales_lag6),
                                                     sale_lag_6_min = min(avg_sales_lag6),
                                                     sale_lag_6_max = max(avg_sales_lag6))
sale.lag.12 <- dt %>% group_by(card_id) %>% summarise(sale_lag_12_tot = sum(avg_sales_lag12),
                                                      sale_lag_12_avg = mean(avg_sales_lag12),
                                                      sale_lag_12_min = min(avg_sales_lag12),
                                                      sale_lag_12_max = max(avg_sales_lag12))
sale.lag <- left_join(sale.lag.3, sale.lag.6, by = "card_id")
sale.lag <- left_join(sale.lag, sale.lag.12, by = "card_id")
rm(sale.lag.3, sale.lag.6, sale.lag.12); gc()

#
mer.sale.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_3_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_3_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_3_min = min(avg_sales_lag3),
                                              mer_sale_lag_3_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_3_tot = mer_sale_lag_3_tot[which.max(n)],
                                  mer_sale_lag_3_avg = mer_sale_lag_3_avg[which.max(n)],
                                  mer_sale_lag_3_min = mer_sale_lag_3_min[which.max(n)],
                                  mer_sale_lag_3_max = mer_sale_lag_3_max[which.max(n)])

#
mer.sale.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_6_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_6_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_6_min = min(avg_sales_lag3),
                                              mer_sale_lag_6_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_6_tot = mer_sale_lag_6_tot[which.max(n)],
                                  mer_sale_lag_6_avg = mer_sale_lag_6_avg[which.max(n)],
                                  mer_sale_lag_6_min = mer_sale_lag_6_min[which.max(n)],
                                  mer_sale_lag_6_max = mer_sale_lag_6_max[which.max(n)])

#
mer.sale.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_12_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_12_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_12_min = min(avg_sales_lag3),
                                              mer_sale_lag_12_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_12_tot = mer_sale_lag_12_tot[which.max(n)],
                                  mer_sale_lag_12_avg = mer_sale_lag_12_avg[which.max(n)],
                                  mer_sale_lag_12_min = mer_sale_lag_12_min[which.max(n)],
                                  mer_sale_lag_12_max = mer_sale_lag_12_max[which.max(n)])
#
mer.sale.lag <- left_join(mer.sale.lag.3, mer.sale.lag.6, by = "card_id")
mer.sale.lag <- left_join(mer.sale.lag, mer.sale.lag.12, by = "card_id")
rm(mer.sale.lag.3, mer.sale.lag.6, mer.sale.lag.12); gc()

#
sale.lag <- left_join(sale.lag, mer.sale.lag, by = "card_id")
rm(mer.sale.lag); gc()

# ------------
# purchase lag
# ------------
pur.lag.3 <- dt %>% group_by(card_id) %>% summarise(pur_lag_3_tot = sum(avg_purchases_lag3),
                                                    pur_lag_3_avg = mean(avg_purchases_lag3),
                                                    pur_lag_3_min = min(avg_purchases_lag3),
                                                    pur_lag_3_max = max(avg_purchases_lag3))
pur.lag.6 <- dt %>% group_by(card_id) %>% summarise(pur_lag_6_tot = sum(avg_purchases_lag6),
                                                    pur_lag_6_avg = mean(avg_purchases_lag6),
                                                    pur_lag_6_min = min(avg_purchases_lag6),
                                                    pur_lag_6_max = max(avg_purchases_lag6))
pur.lag.12 <- dt %>% group_by(card_id) %>% summarise(pur_lag_12_tot = sum(avg_purchases_lag12),
                                                     pur_lag_12_avg = mean(avg_purchases_lag12),
                                                     pur_lag_12_min = min(avg_purchases_lag12),
                                                     pur_lag_12_max = max(avg_purchases_lag12))
pur.lag <- left_join(pur.lag.3, pur.lag.6, by = "card_id")
pur.lag <- left_join(pur.lag, pur.lag.12, by = "card_id")
rm(pur.lag.3, pur.lag.6, pur.lag.12); gc()

#
mer.pur.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_3_tot = sum(avg_purchases_lag3),
                                              mer_pur_lag_3_avg = mean(avg_purchases_lag3),
                                              mer_pur_lag_3_min = min(avg_purchases_lag3),
                                              mer_pur_lag_3_max = max(avg_purchases_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_3_tot = mer_pur_lag_3_tot[which.max(n)],
                                  mer_pur_lag_3_avg = mer_pur_lag_3_avg[which.max(n)],
                                  mer_pur_lag_3_min = mer_pur_lag_3_min[which.max(n)],
                                  mer_pur_lag_3_max = mer_pur_lag_3_max[which.max(n)])

#
mer.pur.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_6_tot = sum(avg_purchases_lag6),
                                              mer_pur_lag_6_avg = mean(avg_purchases_lag6),
                                              mer_pur_lag_6_min = min(avg_purchases_lag6),
                                              mer_pur_lag_6_max = max(avg_purchases_lag6)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_6_tot = mer_pur_lag_6_tot[which.max(n)],
                                  mer_pur_lag_6_avg = mer_pur_lag_6_avg[which.max(n)],
                                  mer_pur_lag_6_min = mer_pur_lag_6_min[which.max(n)],
                                  mer_pur_lag_6_max = mer_pur_lag_6_max[which.max(n)])

#
mer.pur.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_12_tot = sum(avg_purchases_lag12),
                                              mer_pur_lag_12_avg = mean(avg_purchases_lag12),
                                              mer_pur_lag_12_min = min(avg_purchases_lag12),
                                              mer_pur_lag_12_max = max(avg_purchases_lag12)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_12_tot = mer_pur_lag_12_tot[which.max(n)],
                                  mer_pur_lag_12_avg = mer_pur_lag_12_avg[which.max(n)],
                                  mer_pur_lag_12_min = mer_pur_lag_12_min[which.max(n)],
                                  mer_pur_lag_12_max = mer_pur_lag_12_max[which.max(n)])
#
mer.pur.lag <- left_join(mer.pur.lag.3, mer.pur.lag.6, by = "card_id")
mer.pur.lag <- left_join(mer.pur.lag, mer.pur.lag.12, by = "card_id")
rm(mer.pur.lag.3, mer.pur.lag.6, mer.pur.lag.12); gc()

#
pur.lag <- left_join(pur.lag, mer.pur.lag, by = "card_id")
rm(mer.pur.lag); gc()

# ----------------
# active month lag
# ----------------
actMonth.lag.3 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_3_tot = sum(active_months_lag3),
                                                         actMonth_lag_3_avg = mean(active_months_lag3),
                                                         actMonth_lag_3_min = min(active_months_lag3),
                                                         actMonth_lag_3_max = max(active_months_lag3))
actMonth.lag.6 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_6_tot = sum(active_months_lag6),
                                                         actMonth_lag_6_avg = mean(active_months_lag6),
                                                         actMonth_lag_6_min = min(active_months_lag6),
                                                         actMonth_lag_6_max = max(active_months_lag6))
actMonth.lag.12 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_12_tot = sum(active_months_lag12),
                                                          actMonth_lag_12_avg = mean(active_months_lag12),
                                                          actMonth_lag_12_min = min(active_months_lag12),
                                                          actMonth_lag_12_max = max(active_months_lag12))
actMonth.lag <- left_join(actMonth.lag.3, actMonth.lag.6, by = "card_id")
actMonth.lag <- left_join(actMonth.lag, actMonth.lag.12, by = "card_id")
rm(actMonth.lag.3, actMonth.lag.6, actMonth.lag.12); gc()

#
mer.actMonth.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_3_tot = sum(active_months_lag3),
                                              mer_actMonth_lag_3_avg = mean(active_months_lag3),
                                              mer_actMonth_lag_3_min = min(active_months_lag3),
                                              mer_actMonth_lag_3_max = max(active_months_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_3_tot = mer_actMonth_lag_3_tot[which.max(n)],
                                  mer_actMonth_lag_3_avg = mer_actMonth_lag_3_avg[which.max(n)],
                                  mer_actMonth_lag_3_min = mer_actMonth_lag_3_min[which.max(n)],
                                  mer_actMonth_lag_3_max = mer_actMonth_lag_3_max[which.max(n)])
#
mer.actMonth.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_6_tot = sum(active_months_lag6),
                                              mer_actMonth_lag_6_avg = mean(active_months_lag6),
                                              mer_actMonth_lag_6_min = min(active_months_lag6),
                                              mer_actMonth_lag_6_max = max(active_months_lag6)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_6_tot = mer_actMonth_lag_6_tot[which.max(n)],
                                  mer_actMonth_lag_6_avg = mer_actMonth_lag_6_avg[which.max(n)],
                                  mer_actMonth_lag_6_min = mer_actMonth_lag_6_min[which.max(n)],
                                  mer_actMonth_lag_6_max = mer_actMonth_lag_6_max[which.max(n)])
#
mer.actMonth.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_12_tot = sum(active_months_lag12),
                                              mer_actMonth_lag_12_avg = mean(active_months_lag12),
                                              mer_actMonth_lag_12_min = min(active_months_lag12),
                                              mer_actMonth_lag_12_max = max(active_months_lag12)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_12_tot = mer_actMonth_lag_12_tot[which.max(n)],
                                  mer_actMonth_lag_12_avg = mer_actMonth_lag_12_avg[which.max(n)],
                                  mer_actMonth_lag_12_min = mer_actMonth_lag_12_min[which.max(n)],
                                  mer_actMonth_lag_12_max = mer_actMonth_lag_12_max[which.max(n)])
#
mer.actMonth.lag <- left_join(mer.actMonth.lag.3, mer.actMonth.lag.6, by = "card_id")
mer.actMonth.lag <- left_join(mer.actMonth.lag, mer.actMonth.lag.12, by = "card_id")
rm(mer.actMonth.lag.3, mer.actMonth.lag.6, mer.actMonth.lag.12); gc()

#
actMonth.lag <- left_join(actMonth.lag, mer.actMonth.lag, by = "card_id")
rm(mer.actMonth.lag); gc()

# --------
# join all
# --------
rm(dt); gc()

his <- left_join(active.date, authorize, by = "card_id")
his <- left_join(his, category, by = "card_id")
his <- left_join(his, feature, by = "card_id")
his <- left_join(his, spend, by = "card_id")

his <- left_join(his, city.max, by = "card_id")
his <- left_join(his, installment, by = "card_id")
his <- left_join(his, merchant, by = "card_id")
his <- left_join(his, month.lag, by = "card_id")
his <- left_join(his, purchase, by = "card_id")
his <- left_join(his, state.max, by = "card_id")
his <- left_join(his, subsector.max, by = "card_id")
his <- left_join(his, sale.lag, by = "card_id")
his <- left_join(his, pur.lag, by = "card_id")
his <- left_join(his, actMonth.lag, by = "card_id")
his <- left_join(his, range, by = "card_id")
his <- left_join(his, numerical, by = "card_id")

names(his) <- paste("his_", names(his), sep = "")
his <- rename(his, card_id = his_card_id,
                   active_date = his_active_date,
                   days_before_first_use = his_days_before_first_use)


rm(list = setdiff(ls(), c("his","new"))); gc()


# new merchant
##################################################################################### 
##################################################################################### 
# prep data
dt <- read.csv("Elo/test.csv", stringsAsFactors = F)
new.tran <- read.csv("Elo/new_merchant_transactions.csv", stringsAsFactors = F)
dt <- inner_join(dt, new.tran, by = "card_id")
rm(new.tran); gc()

#
m <- read.csv("Elo/merchants.csv", stringsAsFactors = F)
m <- select(m, -c(city_id,category_1,merchant_category_id,category_2,state_id,
                  subsector_id,merchant_group_id))
m <- unique(m)
m[is.na(m)] <- 0
dt <- inner_join(dt, m, by = "merchant_id")
rm(m); gc()



# --------------
# lubridate date
# --------------
dt$first_active_month <- ymd(paste(dt$first_active_month, "-01", sep = ""))
dt$purchase_date <- ymd_hms(dt$purchase_date)

# -----------
# active date
# -----------
active.date <- dt %>% group_by(card_id) %>% summarise(first_purchase_date = min(purchase_date),
                                                      last_purchase_date = max(purchase_date))
active.date$time_span <- with(active.date, as.numeric(abs(difftime(first_purchase_date, last_purchase_date, units = "days"))))
active.date$time_span[active.date$time_span < 1] <- 1

# -------
# feature
# -------
feature <- dt %>% group_by(card_id) %>% summarise(feature_1 = unique(feature_1),
                                                  feature_2 = unique(feature_2),
                                                  feature_3 = unique(feature_3))
feature$feature_3 <- feature$feature_3 + 1

# ---------------
# authorized_flag
# ---------------
authorize <- dt %>% group_by(card_id) %>% summarise(authorized_yes_tot = sum(authorized_flag == "Y"),
                                                    authorized_no_tot = sum(authorized_flag == "N"),
                                                    authorized_rate = mean(authorized_flag == "Y"))
# ----------
# category_1
# ----------
category.1 <- dt %>% group_by(card_id) %>% summarise(category_1_yes_tot = sum(category_1 == "Y"),
                                                     category_1_no_tot = sum(category_1 == "N"),
                                                     category_1_yes_rate = mean(category_1 == "Y"))
# ----------
# category_2
# ----------
dt$category_2[is.na(dt$category_2)] <- 0
category.2 <- dt %>% group_by(card_id) %>% summarise(category_2_0_tot = sum(category_2 == 0),
                                                     category_2_1_tot = sum(category_2 == 1),
                                                     category_2_2_tot = sum(category_2 == 2),
                                                     category_2_3_tot = sum(category_2 == 3),
                                                     category_2_4_tot = sum(category_2 == 4),
                                                     category_2_5_tot = sum(category_2 == 5),
                                                     category_2_0_ratio = mean(category_2 == 0),
                                                     category_2_1_ratio = mean(category_2 == 1),
                                                     category_2_2_ratio = mean(category_2 == 2),
                                                     category_2_3_ratio = mean(category_2 == 3),
                                                     category_2_4_ratio = mean(category_2 == 4))
# ----------
# category_3
# ----------
dt$category_3 <- with(dt, case_when(category_3 == "A" ~ 1,
                                    category_3 == "B" ~ 2,
                                    category_3 == "C" ~ 3,
                                    TRUE ~ 0))
category.3 <- dt %>% group_by(card_id) %>% summarise(category_3_1_tot = sum(category_3 == 1),
                                                     category_3_2_tot = sum(category_3 == 2),
                                                     category_3_3_tot = sum(category_3 == 3),
                                                     category_3_0_tot = sum(category_3 == 0),
                                                     category_3_1_rate = mean(category_3 == 1),
                                                     category_3_2_rate = mean(category_3 == 2),
                                                     category_3_3_rate = mean(category_3 == 3))
# ----------
# category_4
# ----------
category.4 <- dt %>% group_by(card_id) %>% summarise(category_4_yes_tot = sum(category_4 == "Y"),
                                                     category_4_no_tot = sum(category_4 == "N"),
                                                     category_4_yes_ratio = mean(category_4 == "Y"))

#
category <- left_join(category.1, category.2, by = "card_id")
category <- left_join(category, category.3, by = "card_id")
category <- left_join(category, category.4, by = "card_id")
rm(category.1, category.2, category.3, category.4); gc()

# ---------------
# purchase_amount
# ---------------
dt <- dt %>% mutate(purchase_year = year(purchase_date),
                    purchase_month = month(purchase_date, label = T),
                    purchase_week = wday(purchase_date, label = T),
                    purchase_hour = hour(purchase_date),
                    purchase_morning = as.numeric(purchase_hour > 5 & purchase_hour <= 10),
                    purchase_afternoon = as.numeric(purchase_hour > 10 & purchase_hour <= 20),
                    purchase_night = as.numeric(purchase_hour > 20 & purchase_hour <= 24),
                    purchase_lateNight = as.numeric(purchase_hour >= 0 & purchase_hour <= 5))

# approved and rejected spends
spend.approve <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id) %>%
  summarise(spend_app_tot = sum(purchase_amount),
            spend_app_avg = mean(purchase_amount),
            spend_app_min = min(purchase_amount),
            spend_app_max = max(purchase_amount))

spend.reject <- dt %>% filter(authorized_flag == "N") %>% group_by(card_id) %>%
  summarise(spend_rej_tot = sum(purchase_amount),
            spend_rej_avg = mean(purchase_amount),
            spend_rej_min = min(purchase_amount),
            spend_rej_max = max(purchase_amount))

spend <- full_join(spend.approve, spend.reject, by = "card_id")
spend[is.na(spend)] <- 0
rm(spend.approve, spend.reject); gc()

# year
spend.year <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_year) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

tot <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_tot")
names(tot)[!grepl("card_id",names(tot))] <- paste("spend_tot_", names(tot)[!grepl("card_id",names(tot))], sep = "")

avg <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_avg")
names(avg)[!grepl("card_id",names(avg))] <- paste("spend_avg_", names(avg)[!grepl("card_id",names(avg))], sep = "")

min <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_min")
names(min)[!grepl("card_id",names(min))] <- paste("spend_min_", names(min)[!grepl("card_id",names(min))], sep = "")

max <- dcast(spend.year, card_id ~ purchase_year, value.var = "spend_max")
names(max)[!grepl("card_id",names(max))] <- paste("spend_max_", names(max)[!grepl("card_id",names(max))], sep = "")

spend.year <- left_join(tot, avg, by = "card_id")
spend.year <- left_join(spend.year, min, by = "card_id")
spend.year <- left_join(spend.year, max, by = "card_id")
spend.year[is.na(spend.year)] <- 0
rm(tot,avg,min,max); gc()

# month
spend.month <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_month) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

spend.month.tot <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_tot")
names(spend.month.tot)[!grepl("card_id",names(spend.month.tot))] <- paste("spend_tot_", names(spend.month.tot)[!grepl("card_id",names(spend.month.tot))], sep = "")

spend.month.avg <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_avg")
names(spend.month.avg)[!grepl("card_id",names(spend.month.avg))] <- paste("spend_avg_", names(spend.month.avg)[!grepl("card_id",names(spend.month.avg))], sep = "")

spend.month.min <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_min")
names(spend.month.min)[!grepl("card_id",names(spend.month.min))] <- paste("spend_min_", names(spend.month.min)[!grepl("card_id",names(spend.month.min))], sep = "")

spend.month.max <- dcast(spend.month, card_id ~ purchase_month, value.var = "spend_max")
names(spend.month.max)[!grepl("card_id",names(spend.month.max))] <- paste("spend_max_", names(spend.month.max)[!grepl("card_id",names(spend.month.max))], sep = "")

spend.month <- left_join(spend.month.tot, spend.month.avg, by = "card_id")
spend.month <- left_join(spend.month, spend.month.min, by = "card_id")
spend.month <- left_join(spend.month, spend.month.max, by = "card_id")
spend.month[is.na(spend.month)] <- 0

rm(spend.month.avg, spend.month.max, spend.month.min, spend.month.tot); gc()

# weekday
spend.week <- dt %>% filter(authorized_flag == "Y") %>% group_by(card_id,purchase_week) %>%
  summarise(spend_tot = sum(purchase_amount),
            spend_avg = mean(purchase_amount),
            spend_min = min(purchase_amount),
            spend_max = max(purchase_amount))

tot <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_tot")
names(tot)[!grepl("card_id",names(tot))] <- paste("spend_tot_", names(tot)[!grepl("card_id",names(tot))], sep = "")

avg <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_avg")
names(avg)[!grepl("card_id",names(avg))] <- paste("spend_avg_", names(avg)[!grepl("card_id",names(avg))], sep = "")

min <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_min")
names(min)[!grepl("card_id",names(min))] <- paste("spend_min_", names(min)[!grepl("card_id",names(min))], sep = "")

max <- dcast(spend.week, card_id ~ purchase_week, value.var = "spend_max")
names(max)[!grepl("card_id",names(max))] <- paste("spend_max_", names(max)[!grepl("card_id",names(max))], sep = "")

spend.week <- left_join(tot, avg, by = "card_id")
spend.week <- left_join(spend.week, min, by = "card_id")
spend.week <- left_join(spend.week, max, by = "card_id")
spend.week[is.na(spend.week)] <- 0
rm(tot,avg,min,max); gc()

# daytime
spend.morning <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_morning == 1) %>%
  group_by(card_id) %>% summarise(spend_morning_tot = sum(purchase_amount),
                                  spend_morning_avg = mean(purchase_amount),
                                  spend_morning_min = min(purchase_amount),
                                  spend_morning_max = max(purchase_amount))

spend.afternoon <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_afternoon == 1) %>%
  group_by(card_id) %>% summarise(spend_afternoon_tot = sum(purchase_amount),
                                  spend_afternoon_avg = mean(purchase_amount),
                                  spend_afternoon_min = min(purchase_amount),
                                  spend_afternoon_max = max(purchase_amount))

spend.night <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_night == 1) %>%
  group_by(card_id) %>% summarise(spend_night_tot = sum(purchase_amount),
                                  spend_night_avg = mean(purchase_amount),
                                  spend_night_min = min(purchase_amount),
                                  spend_night_max = max(purchase_amount))

spend.lateNight <- dt %>% filter(authorized_flag == "Y") %>% filter(purchase_lateNight == 1) %>%
  group_by(card_id) %>% summarise(spend_lateNight_tot = sum(purchase_amount),
                                  spend_lateNight_avg = mean(purchase_amount),
                                  spend_lateNight_min = min(purchase_amount),
                                  spend_lateNight_max = max(purchase_amount))

spend.dayTime <- left_join(data.frame(card_id = unique(dt$card_id), stringsAsFactors = F),
                           spend.morning,
                           by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.afternoon, by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.night, by = "card_id")
spend.dayTime <- left_join(spend.dayTime, spend.lateNight, by = "card_id")
spend.dayTime[is.na(spend.dayTime)] <- 0

rm(spend.morning, spend.afternoon, spend.night, spend.lateNight); gc()

# join spend
spend <- left_join(spend, spend.year, by = "card_id")
spend <- left_join(spend, spend.month, by = "card_id")
spend <- left_join(spend, spend.week, by = "card_id")
spend <- left_join(spend, spend.dayTime, by = "card_id")
spend[is.na(spend)] <- 0

rm(spend.year, spend.month, spend.week, spend.dayTime); gc()

# -------------
# purchase_date
# -------------
# all
purchase <- dt %>% group_by(card_id) %>% summarise(purchase_tot_all = n())

# year
purchase.year <- dt %>% group_by(card_id,purchase_year) %>% summarise(n = n())
purchase.year <- dcast(purchase.year, card_id ~ purchase_year, value.var = "n")
purchase.year[is.na(purchase.year)] <- 0
purchase.year <- purchase.year %>% mutate(tot = `2017` + `2018`,
                                          `2017_ratio` = `2017`/tot) %>% select(-tot)
names(purchase.year)[!grepl("card",names(purchase.year))] <- paste("purchase_",
                                                                   names(purchase.year)[!grepl("card",names(purchase.year))],
                                                                   sep = "")

# month
purchase.month <- dt %>% group_by(card_id,purchase_month) %>% summarise(n = n())
purchase.month <- dcast(purchase.month, card_id ~ purchase_month, value.var = "n")
purchase.month[is.na(purchase.month)] <- 0
purchase.month <- purchase.month %>% mutate(tot = rowSums(select(purchase.month,-card_id)),
                                            Jan_ratio = Jan/tot,
                                            Feb_ratio = Feb/tot,
                                            Mar_ratio = Mar/tot,
                                            Apr_ratio = Apr/tot,
                                            May_ratio = May/tot,
                                            Jun_ratio = Jun/tot,
                                            Jul_ratio = Jul/tot,
                                            Aug_ratio = Aug/tot,
                                            Sep_ratio = Sep/tot,
                                            Oct_ratio = Oct/tot,
                                            Nov_ratio = Nov/tot) %>% select(-tot)
names(purchase.month)[!grepl("card",names(purchase.month))] <- paste("purchase_", 
                                                                     names(purchase.month)[!grepl("card",names(purchase.month))],
                                                                     sep = "")

# week day
purchase.week <- dt %>% group_by(card_id,purchase_week) %>% summarise(n = n())
purchase.week <- dcast(purchase.week, card_id ~ purchase_week, value.var = "n")
purchase.week[is.na(purchase.week)] <- 0
purchase.week <- purchase.week %>% mutate(tot = rowSums(select(purchase.week,-card_id)),
                                          Sun_ratio = Sun/tot,
                                          Mon_ratio = Mon/tot,
                                          Tue_ratio = Tue/tot,
                                          Wed_ratio = Wed/tot,
                                          Thu_ratio = Thu/tot,
                                          Fri_ratio = Fri/tot)
names(purchase.week)[!grepl("card",names(purchase.week))] <- paste("purchase_",
                                                                   names(purchase.week)[!grepl("card",names(purchase.week))],
                                                                   sep = "")

# day time
purchase.morning <- dt %>% group_by(card_id,purchase_morning) %>% summarise(n = n())
purchase.morning <- dcast(purchase.morning, card_id ~ purchase_morning, value.var = "n") %>% select(-`0`)
names(purchase.morning)[!grepl("card",names(purchase.morning))] <- "purchase_morning"

#
purchase.afternoon <- dt %>% group_by(card_id,purchase_afternoon) %>% summarise(n = n())
purchase.afternoon <- dcast(purchase.afternoon, card_id ~ purchase_afternoon, value.var = "n") %>% select(-`0`)
names(purchase.afternoon)[!grepl("card",names(purchase.afternoon))] <- "purchase_afternoon"

#
purchase.night <- dt %>% group_by(card_id,purchase_night) %>% summarise(n = n())
purchase.night <- dcast(purchase.night, card_id ~ purchase_night, value.var = "n") %>% select(-`0`)
names(purchase.night)[!grepl("card",names(purchase.night))] <- "purchase_night"

#
purchase.lateNight <- dt %>% group_by(card_id,purchase_lateNight) %>% summarise(n = n())
purchase.lateNight <- dcast(purchase.lateNight, card_id ~ purchase_lateNight, value.var = "n") %>% select(-`0`)
names(purchase.lateNight)[!grepl("card",names(purchase.lateNight))] <- "purchase_lateNight"

purchase.dayTime <- left_join(data.frame(card_id = unique(dt$card_id), stringsAsFactors = F),
                              purchase.morning,
                              by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.afternoon, by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.night, by = "card_id")
purchase.dayTime <- left_join(purchase.dayTime, purchase.lateNight, by = "card_id")
purchase.dayTime[is.na(purchase.dayTime)] <- 0

rm(purchase.morning, purchase.afternoon, purchase.night, purchase.lateNight); gc()

purchase <- left_join(purchase, purchase.year, by = "card_id")
purchase <- left_join(purchase, purchase.month, by = "card_id")
purchase <- left_join(purchase, purchase.week, by = "card_id")
purchase <- left_join(purchase, purchase.dayTime, by = "card_id")

rm(purchase.year, purchase.month, purchase.week, purchase.dayTime); gc()

# ------------
# installments
# ------------
dt$installments[dt$installments == -1] <- 0
dt$installments[dt$installments == 999] <- 0
installment <- dt %>% group_by(card_id,installments) %>% summarise(n = n())
installment <- dcast(installment, card_id ~ installments, value.var = "n")
names(installment)[!grepl("card", names(installment))] <- paste("installment_",
                                                                names(installment)[!grepl("card", names(installment))],
                                                                sep = "")
installment[is.na(installment)] <- 0

# ---------
# month_lag
# ---------
month.lag <- dt %>% group_by(card_id) %>% summarise(month_lag_tot = sum(month_lag),
                                                    month_lag_avg = mean(month_lag),
                                                    month_lag_min = min(month_lag),
                                                    month_lag_max = max(month_lag))

# -----------
# merchant_id
# -----------
merchant <- dt %>% group_by(card_id) %>% summarise(merchant_tot = n())
merchant <- left_join(merchant, active.date, by = "card_id") %>% select(-c(first_purchase_date,last_purchase_date))
merchant$merchant_visit_frequency <- with(merchant, merchant_tot/time_span)
merchant$time_span <- NULL

merchant.max <- dt %>% group_by(card_id,merchant_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(merchant_max_visit = max(n), tot = sum(n)) %>%
  mutate(merchant_max_ratio = merchant_max_visit/tot) %>% select(-tot)

merchant.cat.max <- dt %>% group_by(card_id,merchant_category_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(merchant_cat_max_visit = max(n), tot = sum(n)) %>%
  mutate(merchant_cat_max_ratio = merchant_cat_max_visit/tot) %>% select(-tot)

#
merchant <- left_join(merchant, merchant.max, by = "card_id")
merchant <- left_join(merchant, merchant.cat.max, by = "card_id")
rm(merchant.max, merchant.cat.max); gc()

# ------------
# subsector_id
# ------------
subsector.max <- dt %>% group_by(card_id,subsector_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(subsector_max_visit = max(n), tot = sum(n)) %>%
  mutate(subsector_max_ratio = subsector_max_visit/tot) %>% select(-tot)

# -------
# city_id
# -------
city.max <- dt %>% group_by(card_id,city_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(city_max_visit = max(n), tot = sum(n)) %>%
  mutate(city_max_ratio = city_max_visit/tot) %>% select(-tot)

# --------
# state_id
# --------
state.max <- dt %>% group_by(card_id,state_id) %>% summarise(n = n()) %>%
  group_by(card_id) %>% summarise(state_max_visit = max(n), tot = sum(n)) %>%
  mutate(state_max_ratio = state_max_visit/tot) %>% select(-tot)

# ------------------------
# numerical_1, numerical_2
# ------------------------
num.1 <- dt %>% group_by(card_id) %>% summarise(num_1_tot = sum(numerical_1),
                                                num_1_avg = mean(numerical_1),
                                                num_1_min = min(numerical_1),
                                                num_1_max = max(numerical_1))
num.2 <- dt %>% group_by(card_id) %>% summarise(num_2_tot = sum(numerical_2),
                                                num_2_avg = mean(numerical_2),
                                                num_2_min = min(numerical_2),
                                                num_2_max = max(numerical_2))
numerical <- left_join(num.1, num.2, by = "card_id")
rm(num.1, num.2); gc()

#
mer.num.1 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_num_1_tot = sum(numerical_1),
                                              mer_num_1_avg = mean(numerical_1),
                                              mer_num_1_min = min(numerical_1),
                                              mer_num_1_max = max(numerical_1)) %>% 
  group_by(card_id) %>% summarise(mer_num_1_tot = mer_num_1_tot[which.max(n)],
                                  mer_num_1_avg = mer_num_1_avg[which.max(n)],
                                  mer_num_1_min = mer_num_1_min[which.max(n)],
                                  mer_num_1_max = mer_num_1_max[which.max(n)])
#
mer.num.2 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_num_2_tot = sum(numerical_2),
                                              mer_num_2_avg = mean(numerical_2),
                                              mer_num_2_min = min(numerical_2),
                                              mer_num_2_max = max(numerical_2)) %>% 
  group_by(card_id) %>% summarise(mer_num_2_tot = mer_num_2_tot[which.max(n)],
                                  mer_num_2_avg = mer_num_2_avg[which.max(n)],
                                  mer_num_2_min = mer_num_2_min[which.max(n)],
                                  mer_num_2_max = mer_num_2_max[which.max(n)])
# 
mer.numerical <- left_join(mer.num.1, mer.num.2, by = "card_id")
rm(mer.num.1, mer.num.2); gc()

#
numerical <- left_join(numerical, mer.numerical, by = "card_id")
rm(mer.numerical); gc()

# ------------
# most_recent_
# ------------
sale.range <- dt %>% group_by(card_id) %>% 
  summarise(sale_range_A = sum(most_recent_sales_range == "A"),
            sale_range_B = sum(most_recent_sales_range == "B"),
            sale_range_C = sum(most_recent_sales_range == "C"),
            sale_range_D = sum(most_recent_sales_range == "D"),
            sale_range_E = sum(most_recent_sales_range == "E"),
            sale_range_A_ratio = mean(most_recent_sales_range == "A"),
            sale_range_B_ratio = mean(most_recent_sales_range == "B"),
            sale_range_C_ratio = mean(most_recent_sales_range == "C"),
            sale_range_D_ratio = mean(most_recent_sales_range == "D"))

purchase.range <- dt %>% group_by(card_id) %>% 
  summarise(purchase_range_A = sum(most_recent_purchases_range == "A"),
            purchase_range_B = sum(most_recent_purchases_range == "B"),
            purchase_range_C = sum(most_recent_purchases_range == "C"),
            purchase_range_D = sum(most_recent_purchases_range == "D"),
            purchase_range_E = sum(most_recent_purchases_range == "E"),
            purchase_range_A_ratio = mean(most_recent_purchases_range == "A"),
            purchase_range_B_ratio = mean(most_recent_purchases_range == "B"),
            purchase_range_C_ratio = mean(most_recent_purchases_range == "C"),
            purchase_range_D_ratio = mean(most_recent_purchases_range == "D"))

range <- left_join(sale.range, purchase.range, by = "card_id")
rm(sale.range, purchase.range); gc()

# --------
# sale lag
# --------
sale.lag.3 <- dt %>% group_by(card_id) %>% summarise(sale_lag_3_tot = sum(avg_sales_lag3),
                                                     sale_lag_3_avg = mean(avg_sales_lag3),
                                                     sale_lag_3_min = min(avg_sales_lag3),
                                                     sale_lag_3_max = max(avg_sales_lag3))
sale.lag.6 <- dt %>% group_by(card_id) %>% summarise(sale_lag_6_tot = sum(avg_sales_lag6),
                                                     sale_lag_6_avg = mean(avg_sales_lag6),
                                                     sale_lag_6_min = min(avg_sales_lag6),
                                                     sale_lag_6_max = max(avg_sales_lag6))
sale.lag.12 <- dt %>% group_by(card_id) %>% summarise(sale_lag_12_tot = sum(avg_sales_lag12),
                                                      sale_lag_12_avg = mean(avg_sales_lag12),
                                                      sale_lag_12_min = min(avg_sales_lag12),
                                                      sale_lag_12_max = max(avg_sales_lag12))
sale.lag <- left_join(sale.lag.3, sale.lag.6, by = "card_id")
sale.lag <- left_join(sale.lag, sale.lag.12, by = "card_id")
rm(sale.lag.3, sale.lag.6, sale.lag.12); gc()

#
mer.sale.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_3_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_3_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_3_min = min(avg_sales_lag3),
                                              mer_sale_lag_3_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_3_tot = mer_sale_lag_3_tot[which.max(n)],
                                  mer_sale_lag_3_avg = mer_sale_lag_3_avg[which.max(n)],
                                  mer_sale_lag_3_min = mer_sale_lag_3_min[which.max(n)],
                                  mer_sale_lag_3_max = mer_sale_lag_3_max[which.max(n)])

#
mer.sale.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_6_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_6_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_6_min = min(avg_sales_lag3),
                                              mer_sale_lag_6_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_6_tot = mer_sale_lag_6_tot[which.max(n)],
                                  mer_sale_lag_6_avg = mer_sale_lag_6_avg[which.max(n)],
                                  mer_sale_lag_6_min = mer_sale_lag_6_min[which.max(n)],
                                  mer_sale_lag_6_max = mer_sale_lag_6_max[which.max(n)])

#
mer.sale.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_sale_lag_12_tot = sum(avg_sales_lag3),
                                              mer_sale_lag_12_avg = mean(avg_sales_lag3),
                                              mer_sale_lag_12_min = min(avg_sales_lag3),
                                              mer_sale_lag_12_max = max(avg_sales_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_sale_lag_12_tot = mer_sale_lag_12_tot[which.max(n)],
                                  mer_sale_lag_12_avg = mer_sale_lag_12_avg[which.max(n)],
                                  mer_sale_lag_12_min = mer_sale_lag_12_min[which.max(n)],
                                  mer_sale_lag_12_max = mer_sale_lag_12_max[which.max(n)])
#
mer.sale.lag <- left_join(mer.sale.lag.3, mer.sale.lag.6, by = "card_id")
mer.sale.lag <- left_join(mer.sale.lag, mer.sale.lag.12, by = "card_id")
rm(mer.sale.lag.3, mer.sale.lag.6, mer.sale.lag.12); gc()

#
sale.lag <- left_join(sale.lag, mer.sale.lag, by = "card_id")
rm(mer.sale.lag); gc()

# ------------
# purchase lag
# ------------
pur.lag.3 <- dt %>% group_by(card_id) %>% summarise(pur_lag_3_tot = sum(avg_purchases_lag3),
                                                    pur_lag_3_avg = mean(avg_purchases_lag3),
                                                    pur_lag_3_min = min(avg_purchases_lag3),
                                                    pur_lag_3_max = max(avg_purchases_lag3))
pur.lag.6 <- dt %>% group_by(card_id) %>% summarise(pur_lag_6_tot = sum(avg_purchases_lag6),
                                                    pur_lag_6_avg = mean(avg_purchases_lag6),
                                                    pur_lag_6_min = min(avg_purchases_lag6),
                                                    pur_lag_6_max = max(avg_purchases_lag6))
pur.lag.12 <- dt %>% group_by(card_id) %>% summarise(pur_lag_12_tot = sum(avg_purchases_lag12),
                                                     pur_lag_12_avg = mean(avg_purchases_lag12),
                                                     pur_lag_12_min = min(avg_purchases_lag12),
                                                     pur_lag_12_max = max(avg_purchases_lag12))
pur.lag <- left_join(pur.lag.3, pur.lag.6, by = "card_id")
pur.lag <- left_join(pur.lag, pur.lag.12, by = "card_id")
rm(pur.lag.3, pur.lag.6, pur.lag.12); gc()

#
mer.pur.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_3_tot = sum(avg_purchases_lag3),
                                              mer_pur_lag_3_avg = mean(avg_purchases_lag3),
                                              mer_pur_lag_3_min = min(avg_purchases_lag3),
                                              mer_pur_lag_3_max = max(avg_purchases_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_3_tot = mer_pur_lag_3_tot[which.max(n)],
                                  mer_pur_lag_3_avg = mer_pur_lag_3_avg[which.max(n)],
                                  mer_pur_lag_3_min = mer_pur_lag_3_min[which.max(n)],
                                  mer_pur_lag_3_max = mer_pur_lag_3_max[which.max(n)])

#
mer.pur.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_6_tot = sum(avg_purchases_lag6),
                                              mer_pur_lag_6_avg = mean(avg_purchases_lag6),
                                              mer_pur_lag_6_min = min(avg_purchases_lag6),
                                              mer_pur_lag_6_max = max(avg_purchases_lag6)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_6_tot = mer_pur_lag_6_tot[which.max(n)],
                                  mer_pur_lag_6_avg = mer_pur_lag_6_avg[which.max(n)],
                                  mer_pur_lag_6_min = mer_pur_lag_6_min[which.max(n)],
                                  mer_pur_lag_6_max = mer_pur_lag_6_max[which.max(n)])

#
mer.pur.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_pur_lag_12_tot = sum(avg_purchases_lag12),
                                              mer_pur_lag_12_avg = mean(avg_purchases_lag12),
                                              mer_pur_lag_12_min = min(avg_purchases_lag12),
                                              mer_pur_lag_12_max = max(avg_purchases_lag12)) %>% 
  group_by(card_id) %>% summarise(mer_pur_lag_12_tot = mer_pur_lag_12_tot[which.max(n)],
                                  mer_pur_lag_12_avg = mer_pur_lag_12_avg[which.max(n)],
                                  mer_pur_lag_12_min = mer_pur_lag_12_min[which.max(n)],
                                  mer_pur_lag_12_max = mer_pur_lag_12_max[which.max(n)])
#
mer.pur.lag <- left_join(mer.pur.lag.3, mer.pur.lag.6, by = "card_id")
mer.pur.lag <- left_join(mer.pur.lag, mer.pur.lag.12, by = "card_id")
rm(mer.pur.lag.3, mer.pur.lag.6, mer.pur.lag.12); gc()

#
pur.lag <- left_join(pur.lag, mer.pur.lag, by = "card_id")
rm(mer.pur.lag); gc()

# ----------------
# active month lag
# ----------------
actMonth.lag.3 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_3_tot = sum(active_months_lag3),
                                                         actMonth_lag_3_avg = mean(active_months_lag3),
                                                         actMonth_lag_3_min = min(active_months_lag3),
                                                         actMonth_lag_3_max = max(active_months_lag3))
actMonth.lag.6 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_6_tot = sum(active_months_lag6),
                                                         actMonth_lag_6_avg = mean(active_months_lag6),
                                                         actMonth_lag_6_min = min(active_months_lag6),
                                                         actMonth_lag_6_max = max(active_months_lag6))
actMonth.lag.12 <- dt %>% group_by(card_id) %>% summarise(actMonth_lag_12_tot = sum(active_months_lag12),
                                                          actMonth_lag_12_avg = mean(active_months_lag12),
                                                          actMonth_lag_12_min = min(active_months_lag12),
                                                          actMonth_lag_12_max = max(active_months_lag12))
actMonth.lag <- left_join(actMonth.lag.3, actMonth.lag.6, by = "card_id")
actMonth.lag <- left_join(actMonth.lag, actMonth.lag.12, by = "card_id")
rm(actMonth.lag.3, actMonth.lag.6, actMonth.lag.12); gc()

#
mer.actMonth.lag.3 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_3_tot = sum(active_months_lag3),
                                              mer_actMonth_lag_3_avg = mean(active_months_lag3),
                                              mer_actMonth_lag_3_min = min(active_months_lag3),
                                              mer_actMonth_lag_3_max = max(active_months_lag3)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_3_tot = mer_actMonth_lag_3_tot[which.max(n)],
                                  mer_actMonth_lag_3_avg = mer_actMonth_lag_3_avg[which.max(n)],
                                  mer_actMonth_lag_3_min = mer_actMonth_lag_3_min[which.max(n)],
                                  mer_actMonth_lag_3_max = mer_actMonth_lag_3_max[which.max(n)])
#
mer.actMonth.lag.6 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_6_tot = sum(active_months_lag6),
                                              mer_actMonth_lag_6_avg = mean(active_months_lag6),
                                              mer_actMonth_lag_6_min = min(active_months_lag6),
                                              mer_actMonth_lag_6_max = max(active_months_lag6)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_6_tot = mer_actMonth_lag_6_tot[which.max(n)],
                                  mer_actMonth_lag_6_avg = mer_actMonth_lag_6_avg[which.max(n)],
                                  mer_actMonth_lag_6_min = mer_actMonth_lag_6_min[which.max(n)],
                                  mer_actMonth_lag_6_max = mer_actMonth_lag_6_max[which.max(n)])
#
mer.actMonth.lag.12 <- dt %>% 
  group_by(card_id,merchant_id) %>% summarise(n = n(), 
                                              mer_actMonth_lag_12_tot = sum(active_months_lag12),
                                              mer_actMonth_lag_12_avg = mean(active_months_lag12),
                                              mer_actMonth_lag_12_min = min(active_months_lag12),
                                              mer_actMonth_lag_12_max = max(active_months_lag12)) %>% 
  group_by(card_id) %>% summarise(mer_actMonth_lag_12_tot = mer_actMonth_lag_12_tot[which.max(n)],
                                  mer_actMonth_lag_12_avg = mer_actMonth_lag_12_avg[which.max(n)],
                                  mer_actMonth_lag_12_min = mer_actMonth_lag_12_min[which.max(n)],
                                  mer_actMonth_lag_12_max = mer_actMonth_lag_12_max[which.max(n)])
#
mer.actMonth.lag <- left_join(mer.actMonth.lag.3, mer.actMonth.lag.6, by = "card_id")
mer.actMonth.lag <- left_join(mer.actMonth.lag, mer.actMonth.lag.12, by = "card_id")
rm(mer.actMonth.lag.3, mer.actMonth.lag.6, mer.actMonth.lag.12); gc()

#
actMonth.lag <- left_join(actMonth.lag, mer.actMonth.lag, by = "card_id")
rm(mer.actMonth.lag); gc()

# --------
# join all
# --------
new <- left_join(active.date, authorize, by = "card_id")
new <- left_join(new, category, by = "card_id")
new <- left_join(new, city.max, by = "card_id")
new <- left_join(new, feature, by = "card_id")
new <- left_join(new, installment, by = "card_id")
new <- left_join(new, merchant, by = "card_id")
new <- left_join(new, month.lag, by = "card_id")
new <- left_join(new, purchase, by = "card_id")
new <- left_join(new, spend, by = "card_id")
new <- left_join(new, state.max, by = "card_id")
new <- left_join(new, subsector.max, by = "card_id")
new <- left_join(new, sale.lag, by = "card_id")
new <- left_join(new, pur.lag, by = "card_id")
new <- left_join(new, actMonth.lag, by = "card_id")
new <- left_join(new, range, by = "card_id")
new <- left_join(new, numerical, by = "card_id")

names(new) <- paste("new_", names(new), sep = "")
new <- rename(new, card_id = new_card_id)

rm(list = setdiff(ls(), c("new","his"))); gc()

# join his and new
#####################################################################################
#####################################################################################
final <- left_join(his, new, by = "card_id")
final$new_first_purchase_date[is.na(final$new_first_purchase_date)] <- final$his_last_purchase_date[is.na(final$new_first_purchase_date)]
final <- final %>% mutate(days_betwn_his_new = as.numeric(abs(difftime(his_last_purchase_date, new_first_purchase_date, units = "days")))) %>%
  select(-c(active_date,his_first_purchase_date,his_last_purchase_date,
            new_first_purchase_date,new_last_purchase_date))
final[is.na(final)] <- 0
rm(his, new); gc()


score <- read.csv("Elo/Iteration_2/test_final.csv", stringsAsFactors = F)
iscore <- xgb.DMatrix(data = as.matrix(select(score, -card_id)))

pred <- predict(iboost, iscore)
submit <- data.frame(card_id = score$card_id, target = pred, stringsAsFactors = F)

write.csv(submit, "Elo/submission_1.csv", row.names = F)

# ------------------
# variable selection
# ------------------
final <- read.csv("Elo/test_final.csv", stringsAsFactors = F)
iscore <- xgb.DMatrix(data = as.matrix(select(final, imp.var)))
pred <- predict(iboost, iscore)
submit <- data.frame(card_id = final$card_id, target = pred, stringsAsFactors = F)
write.csv(submit, "Elo/submission_2.csv", row.names = F)


# ------------------
# include outliers
# ------------------
final <- read.csv("Elo/test_final.csv", stringsAsFactors = F)
ifinal <- xgb.DMatrix(data = as.matrix(select(final, -card_id)))
bst.outlier <- xgb.load("Elo/bst_outlier")
dt <- data.frame(card_id = final$card_id, prob_outlier = predict(bst.outlier,ifinal),
                 stringsAsFactors = F)
dt$outlier <- as.numeric(dt$prob_outlier >= 0.03934946)

dt.outlier <- filter(final, card_id %in% dt$card_id[dt$outlier == 1])
dt.non.outlier <- anti_join(final, dt.outlier, by = "card_id")

bst1 <- xgb.load("Elo/bst1")
bst2 <- xgb.load("Elo/bst2")

iout <- xgb.DMatrix(data = as.matrix(select(dt.outlier, -card_id)))
inon.out <- xgb.DMatrix(data = as.matrix(select(dt.non.outlier, -card_id)))

result.1 <- data.frame(card_id = dt.outlier$card_id, target = predict(bst1, iout),
                       stringsAsFactors = F)
result.2 <- data.frame(card_id = dt.non.outlier$card_id, target = predict(bst2, inon.out), 
                       stringsAsFactors = F)
result <- bind_rows(result.1, result.2)

write.csv(result, "Elo/submission_4.csv", row.names = F)



# --------------------
# down sampling models
# --------------------
score <- read.csv("Elo/test_final.csv", stringsAsFactors = F)
iscore <- xgb.DMatrix(data = as.matrix(select(score, -card_id)))

bst.1 <- xgb.load("Elo/bst_down_1")
bst.2 <- xgb.load("Elo/bst_down_2")
bst.3 <- xgb.load("Elo/bst_down_3")
bst.4 <- xgb.load("Elo/bst_down_4")
bst.5 <- xgb.load("Elo/bst_down_5")
bst.6 <- xgb.load("Elo/bst_down_6")
bst.7 <- xgb.load("Elo/bst_down_7")
bst.8 <- xgb.load("Elo/bst_down_8")
bst.9 <- xgb.load("Elo/bst_down_9")
bst.10 <- xgb.load("Elo/bst_down_10")

result <- data.frame(card_id = score$card_id, 
                     prob_1 = predict(bst.1, iscore),
                     prob_2 = predict(bst.2, iscore),
                     prob_3 = predict(bst.3, iscore),
                     prob_4 = predict(bst.4, iscore),
                     prob_5 = predict(bst.5, iscore),
                     prob_6 = predict(bst.6, iscore),
                     prob_7 = predict(bst.7, iscore),
                     prob_8 = predict(bst.8, iscore),
                     prob_9 = predict(bst.9, iscore),
                     prob_10 = predict(bst.10, iscore), stringsAsFactors = F)
result$prob_avg <- apply(select(result, -card_id), 1, mean)
result$outlier <- ifelse(result$prob_avg < 0.5, 0, 1)

rm(list = setdiff(ls(), c("result","score","iscore")))
gc()

bst.all <- xgb.load("Elo/bst1")
bst.part <- xgb.load("Elo/bst2")


outlier <- filter(score, card_id %in% result$card_id[result$outlier == 1])
non.outlier <- anti_join(score, outlier, by = "card_id")

ioutlier <- xgb.DMatrix(data = as.matrix(select(outlier, -card_id)))
inon.outlier <- xgb.DMatrix(data = as.matrix(select(non.outlier, -card_id)))

result.out <- data.frame(card_id = outlier$card_id, target = predict(bst.all, ioutlier),
                         stringsAsFactors = F)
result.non <- data.frame(card_id = non.outlier$card_id, target = predict(bst.part, inon.outlier),
                         stringsAsFactors = F)
result <- bind_rows(result.out, result.non)
write.csv(result, "Elo/submission_5.csv", row.names = F)


# 
score <- read.csv("Elo/test_final.csv", stringsAsFactors = F)
iscore <- xgb.DMatrix(data = as.matrix(select(score, )))
bst <- xgb.load("Elo/bst2")
submit <- data.frame(card_id = score$card_id, target = predict(bst, iscore), stringsAsFactors = F)

write.csv(submit, "Elo/submission_6.csv", row.names = F)

# -----------
# Iteration 2
# -----------
score <- read.csv("Elo/Iteration_2/test_final.csv", stringsAsFactors = F)
iscore <- xgb.DMatrix(data = as.matrix(select(score, -card_id)))

submit <- data.frame(card_id = score$card_id, target = predict(bst, iscore), 
                     stringsAsFactors = F)

write.csv(submit, "Elo/submission_7.csv", row.names = F)

#
iscore <- xgb.DMatrix(data = as.matrix(select(score, imp.var)))
submit <- data.frame(card_id = score$card_id, target = predict(bst.1, iscore), 
                     stringsAsFactors = F)

write.csv(submit, "Elo/submission_8.csv", row.names = F)


